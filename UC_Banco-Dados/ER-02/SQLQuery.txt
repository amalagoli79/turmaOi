--DDL 
CREATE DATABASE RpgBDTurmaOi
GO

USE RpgBDTurmaOi
GO

CREATE TABLE Usuarios
(
	IdUsuario INT PRIMARY KEY IDENTITY,
	Email VARCHAR(100) UNIQUE NOT NULL,
	Apelido VARCHAR(20) UNIQUE NOT NULL,
	Senha VARCHAR(30) NOT NULL,
)
GO

CREATE TABLE Classes
(
	IdClasse INT PRIMARY KEY IDENTITY,
	Nome VARCHAR(30) UNIQUE NOT NULL,
	Descricao VARCHAR(255)
)
GO

CREATE TABLE Personagens
(
	IdPersonagem INT PRIMARY KEY IDENTITY,
	Nome VARCHAR(30) UNIQUE NOT NULL,
	IdUsuario INT UNIQUE FOREIGN KEY REFERENCES Usuarios(IdUsuario),
	IdClasse INT FOREIGN KEY REFERENCES Classes(IdClasse)
)
GO

CREATE TABLE Habilidades
(
	IdHabilidade INT PRIMARY KEY IDENTITY,
	Nome VARCHAR(50) UNIQUE NOT NULL,
	Descricao VARCHAR(255)
)
GO

CREATE TABLE ClasseHabilidade
(
	IdClasse INT FOREIGN KEY REFERENCES Classes(IdClasse),
	IdHabilidade INT FOREIGN KEY REFERENCES Habilidades(IdHabilidade)
)
GO

--DML
INSERT INTO Usuarios (Email, Senha, Apelido) VALUES ('email@email.com', '1234', 'Rambo')
INSERT INTO Classes VALUES('Barbaro', 'Descrição do barbaro')
INSERT INTO Habilidades VALUES ('Lança Mortal', 'Descrição da Lança Mortal'), ('Escudo Supremo', 'Descrição do Escudo Supremo')
INSERT INTO Personagens VALUES ('DeuBug', 1, 1)
INSERT INTO ClasseHabilidade VALUES (1,1), (1,2) 


INSERT INTO Usuarios VALUES ('email@email2.com', 'SoulKiller', 1234)
INSERT INTO Classes VALUES ('Monge', 'Descrição Classe Monge')
INSERT INTO Habilidades VALUES ('Recuperar Vida', 'Descrição Recuperar Vida')
INSERT INTO Personagens VALUES ('BitBug', 2, 2)
INSERT INTO ClasseHabilidade VALUES (2,2),(2,3)

/*
UPDATE Usuarios 
SET Senha = 123456 
WHERE IdUsuario = 1
*/

--DQL
SELECT * FROM Usuarios
SELECT Senha, Email FROM Usuarios
SELECT * FROM Classes
SELECT * FROM Habilidades

--Seleciona todos os elememtnos de ambas as tabelas
SELECT * FROM Personagens
INNER JOIN Classes
ON Personagens.IdClasse = Classes.IdClasse

--Seleciona apenas as colunas solicitadas
SELECT Personagens.Nome, Classes.Nome, Classes.Descricao FROM Personagens
INNER JOIN Classes
ON Personagens.IdClasse = Classes.IdClasse


--Quando temos certeza do personagem, usuario e classe, utilizamos o INNER
SELECT P.Nome, C.Nome 'Classe', C.Descricao FROM Personagens AS P
INNER JOIN Classes AS C
ON P.IdClasse = C.IdClasse


CREATE DATABASE ExemploJoin
GO

Use ExemploJoin
GO

CREATE TABLE NomeA(
	Nome VARCHAR(50) NOT NULL
)
GO

CREATE TABLE NomeB(
	Nome VARCHAR(50) NOT NULL
)
GO

INSERT INTO NomeA VALUES('Fernanda'), ('Maria'), ('Luiz'), ('Caique') --Tecnico
INSERT INTO NomeB VALUES('Luiz'), ('Caique'), ('Odirlei'), ('Jessica') --CTM

--JOIN (INNER JOIN) - Traz somente onde há equivalência
Select * From NomeA
JOIN NomeB
ON NomeA.Nome = NomeB.Nome

--LEFT JOIN - Traz todos os elementos da PRIMERA tabela e suas equivalências na SEGUNDA tabela
Select * From NomeA
LEFT JOIN NomeB
ON NomeA.Nome = NomeB.Nome

--RIGHT JOIN - Traz todos os elementos da SEGUNDA tabela e suas equivalências na PRIMEIRA tabela
Select * From NomeA
RIGHT JOIN NomeB
ON NomeA.Nome = NomeB.Nome

--FULL OUTER JOIN - Traz todos os elementos
Select * From NomeA
FULL OUTER JOIN NomeB
ON NomeA.Nome = NomeB.Nome








